{"version":3,"sources":["Components/Home.js","Components/Manage.js","Components/Assesment.js","Front.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","React","Component","Manage","props","state","posts","errorMsg","axios","get","then","response","console","log","data","setState","catch","error","this","border","align","cellPadding","length","map","post","key","id","rollNo","name","branch","studentRollNumber","unitTest","midTermTest","finalTest","grade","Front","openPage","bind","pageName","evt","i","tabcontent","tablinks","document","getElementsByClassName","style","display","replace","getElementById","currentTarget","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","onClick","Form","inline","FormControl","type","placeholder","Button","variant","Assesment","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e7ef936.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Home extends React.Component {\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"Home\">\r\n                <h3>Welcome!!!!</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Home;","import React from 'react';\r\nimport axios from 'axios';\r\nimport './Manage.css'\r\n// import Register from './LogReg/Register'\r\nclass Manage extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: [],\r\n            errorMsg: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://10.44.50.37:8084/student_ru/student/')\r\n            .then(response => {\r\n                console.log(response.data)\r\n                this.setState({ posts: response.data })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setState({ errorMsg: 'Error in recieving Data' });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { posts, errorMsg } = this.state\r\n        return (\r\n            <div className='Manage'>\r\n                <p>List of Students are as follows: -\r\n                <button className='top-right'>Add New Student</button></p>\r\n                <table border='5' className=\"List\" align='center' cellPadding='7'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            <th>Body</th>\r\n                            <th>Edit</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            posts.length ?\r\n                                posts.map(post =>\r\n                                    <tr key={post.id}>\r\n                                        <td align=\"center\">{post.rollNo}</td>\r\n                                        <td>{post.name}</td>\r\n                                        <td>{post.branch}</td>\r\n                                        <td><button className='table-buttons'>Edit</button></td>\r\n                                    </tr>\r\n                                ) :\r\n                                null\r\n                        }\r\n                        {\r\n                            errorMsg ?\r\n                                posts.map(post =>\r\n                                    <tr key='Error'>\r\n                                        <td>{errorMsg}</td>\r\n                                    </tr>\r\n                                ) :\r\n                                null\r\n\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Manage;","import React from 'react';\r\nimport axios from 'axios';\r\nimport './Manage.css'\r\n// import Register from './LogReg/Register'\r\nclass Manage extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: [],\r\n            errorMsg: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://10.44.50.37:8084/assessment/')\r\n            .then(response => {\r\n                console.log(response.data)\r\n                this.setState({ posts: response.data })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setState({ errorMsg: 'Error in recieving Data' });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { posts, errorMsg } = this.state\r\n        return (\r\n            <div className='Manage'>\r\n                <p>List of Students are as follows: -\r\n                <button className='top-right'>Add New Student</button></p>\r\n                <table border='5' className=\"List\" align='center' cellPadding='7'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Roll No.</th>\r\n                            <th>Unit Test</th>\r\n                            <th>Mid-Term Test</th>\r\n                            <th>Final Test</th>\r\n                            <th>Grade</th>\r\n                            <th>Edit</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            posts.length ?\r\n                                posts.map(post =>\r\n                                    <tr key={post.studentRollNumber}>\r\n                                        <td>{post.studentRollNumber}</td>\r\n                                        <td>{post.unitTest}</td>\r\n                                        <td>{post.midTermTest}</td>\r\n                                        <td>{post.finalTest}</td>\r\n                                        <td>{post.grade}</td>\r\n                                        <td><button className='table-buttons'>Edit</button></td>\r\n                                    </tr>\r\n                                ) :\r\n                                null\r\n                        }\r\n                        {\r\n                            errorMsg ?\r\n                                posts.map(post =>\r\n                                    <tr key='Error'>\r\n                                        <td>{errorMsg}</td>\r\n                                    </tr>\r\n                                ) :\r\n                                null\r\n\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Manage;","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport {  Nav, Form, Button, FormControl } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n// import 'bootstrap/dist/css/bootstrap-theme.css';\r\nimport Home from './Components/Home';\r\nimport Manage from './Components/Manage';\r\nimport Assesment from './Components/Assesment';\r\n\r\nclass Front extends React.Component {\r\n\r\n    //////\r\n    constructor(props) {\r\n        super(props);\r\n        this.openPage = this.openPage.bind(this);\r\n    }\r\n    openPage(pageName, evt) {\r\n        console.log(pageName);\r\n        var i, tabcontent, tablinks;\r\n        tabcontent = document.getElementsByClassName(\"tabcontent\");\r\n        for (i = 0; i < tabcontent.length; i++) {\r\n            tabcontent[i].style.display = \"none\";\r\n        }\r\n        tablinks = document.getElementsByClassName(\"tablinks\");\r\n        for (i = 0; i < tablinks.length; i++) {\r\n            tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\r\n        }\r\n        document.getElementById(pageName).style.display = \"block\";\r\n        evt.currentTarget.className += \" active\";\r\n    }\r\n    /////   \r\n    render() {\r\n        return <div>\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"Home\">Student Management</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link  onClick = {(evt) => this.openPage('Home',evt)}>Home</Nav.Link>\r\n                        <Nav.Link  onClick = {(evt) => this.openPage('Manage',evt)}>Manage</Nav.Link>\r\n                        <Nav.Link  onClick = {(evt) => this.openPage('Assesment',evt)}>Assesment</Nav.Link>\r\n                    </Nav>\r\n                    <Form inline>\r\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                        <Button variant=\"outline-success\">Search</Button>\r\n                    </Form>\r\n\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n\r\n             <div id=\"Home\" className=\"tabcontent\">\r\n                    <Home />\r\n                </div>\r\n\r\n                <div id=\"Manage\" className=\"tabcontent\">\r\n                    <Manage />\r\n                </div>\r\n                <div id=\"Assesment\" className=\"tabcontent\">\r\n                    <Assesment />\r\n                </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Front;\r\n","import React from 'react';\nimport Front from './Front'\nimport './App.css';\n// import Tabs from 'react-bootstrap/Tabs'\nclass App extends React.Component {\n  render() {\n    return <div><Front/></div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}